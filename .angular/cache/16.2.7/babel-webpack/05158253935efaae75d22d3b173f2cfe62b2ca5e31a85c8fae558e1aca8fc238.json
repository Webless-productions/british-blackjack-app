{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class RulesComponent {\n  static #_ = this.ɵfac = function RulesComponent_Factory(t) {\n    return new (t || RulesComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RulesComponent,\n    selectors: [[\"app-rules\"]],\n    decls: 49,\n    vars: 0,\n    consts: [[1, \"min-h-screen\", \"bg-gray-100\", \"text-gray-800\"], [1, \"bg-blue-500\", \"text-white\", \"text-center\", \"p-8\"], [1, \"text-3xl\", \"font-bold\"], [1, \"container\", \"mx-auto\", \"p-8\"], [1, \"text-2xl\", \"font-bold\", \"mb-4\"], [1, \"list-disc\", \"list-inside\", \"mb-4\"], [1, \"text-2xl\", \"font-bold\", \"mt-8\", \"mb-4\"]],\n    template: function RulesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Card Game Rules\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"Learn the rules of our exciting card game!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"h2\", 4);\n        i0.ɵɵtext(8, \"Gameplay:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"The player to the dealer's left goes first. On a player's turn, they must do one of the following:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ul\", 5)(12, \"li\");\n        i0.ɵɵtext(13, \"Play a card matching the discard in number, value, or suit.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"li\");\n        i0.ɵɵtext(15, \"Play a suited King, Queen, 8, 2, Jack, Ace, or Joker.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17, \"Play continues in a clockwise direction, or counterclockwise if a King (Reverse) is played.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"h2\", 6);\n        i0.ɵɵtext(19, \"Special Card Rules:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ul\", 5)(21, \"li\")(22, \"strong\");\n        i0.ɵɵtext(23, \"2s:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(24, \" When a 2 is played, the next player must pick up the number of cards specified (2 cards unless stacked).\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"li\")(26, \"strong\");\n        i0.ɵɵtext(27, \"8s:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \" When an 8 is played, the next player loses their turn (is \\\"skipped\\\").\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"li\")(30, \"strong\");\n        i0.ɵɵtext(31, \"Jacks:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(32, \" If a black Jack is played, the next player must pick up 5 cards. If a red Jack is played immediately after a black Jack, it cancels the pick up 5 cards.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"li\")(34, \"strong\");\n        i0.ɵɵtext(35, \"Queens:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(36, \" When a Queen is played, it must be covered by a card of the same suit on the next turn. If the next player cannot play a card of the same suit, they must draw a card from the deck.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"li\")(38, \"strong\");\n        i0.ɵɵtext(39, \"Kings:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \" When a King is played, the direction of play is reversed (clockwise to counterclockwise, or vice versa).\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"li\")(42, \"strong\");\n        i0.ɵɵtext(43, \"Aces:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(44, \" These are wild cards that can be played on any card. The player who plays an Ace gets to choose the suit that continues play.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"li\")(46, \"strong\");\n        i0.ɵɵtext(47, \"Jokers:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(48, \" If your deck includes Jokers, they can become any card, meaning the player can decide what card (and hence what action) the Joker represents.\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RulesComponent","_","_2","selectors","decls","vars","consts","template","RulesComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/Users/Titas/React Project/british-blackjack-app/src/app/rules/rules.component.ts","/Users/Titas/React Project/british-blackjack-app/src/app/rules/rules.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-rules',\n  templateUrl: './rules.component.html',\n  styleUrls: ['./rules.component.css']\n})\nexport class RulesComponent {\n\n}\n","<div class=\"min-h-screen bg-gray-100 text-gray-800\">\n    <!-- Rules Header -->\n    <div class=\"bg-blue-500 text-white text-center p-8\">\n      <h1 class=\"text-3xl font-bold\">Card Game Rules</h1>\n      <p>Learn the rules of our exciting card game!</p>\n    </div>\n  \n    <!-- Rules Content -->\n    <div class=\"container mx-auto p-8\">\n      <h2 class=\"text-2xl font-bold mb-4\">Gameplay:</h2>\n      <p>The player to the dealer's left goes first. On a player's turn, they must do one of the following:</p>\n      <ul class=\"list-disc list-inside mb-4\">\n        <li>Play a card matching the discard in number, value, or suit.</li>\n        <li>Play a suited King, Queen, 8, 2, Jack, Ace, or Joker.</li>\n      </ul>\n      <p>Play continues in a clockwise direction, or counterclockwise if a King (Reverse) is played.</p>\n  \n      <h2 class=\"text-2xl font-bold mt-8 mb-4\">Special Card Rules:</h2>\n      <ul class=\"list-disc list-inside mb-4\">\n        <li><strong>2s:</strong> When a 2 is played, the next player must pick up the number of cards specified (2 cards unless stacked).</li>\n        <li><strong>8s:</strong> When an 8 is played, the next player loses their turn (is \"skipped\").</li>\n        <li><strong>Jacks:</strong> If a black Jack is played, the next player must pick up 5 cards. If a red Jack is played immediately after a black Jack, it cancels the pick up 5 cards.</li>\n        <li><strong>Queens:</strong> When a Queen is played, it must be covered by a card of the same suit on the next turn. If the next player cannot play a card of the same suit, they must draw a card from the deck.</li>\n        <li><strong>Kings:</strong> When a King is played, the direction of play is reversed (clockwise to counterclockwise, or vice versa).</li>\n        <li><strong>Aces:</strong> These are wild cards that can be played on any card. The player who plays an Ace gets to choose the suit that continues play.</li>\n        <li><strong>Jokers:</strong> If your deck includes Jokers, they can become any card, meaning the player can decide what card (and hence what action) the Joker represents.</li>\n      </ul>\n    </div>\n  </div>"],"mappings":";AAOA,OAAM,MAAOA,cAAc;EAAA,QAAAC,CAAA,G;qBAAdD,cAAc;EAAA;EAAA,QAAAE,EAAA,G;UAAdF,cAAc;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3BE,EAAA,CAAAC,cAAA,aAAoD;QAGfD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACnDH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,iDAA0C;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAInDH,EAAA,CAAAC,cAAA,aAAmC;QACGD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClDH,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,0GAAkG;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACzGH,EAAA,CAAAC,cAAA,aAAuC;QACjCD,EAAA,CAAAE,MAAA,mEAA2D;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACpEH,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,6DAAqD;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEhEH,EAAA,CAAAC,cAAA,SAAG;QAAAD,EAAA,CAAAE,MAAA,mGAA2F;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAElGH,EAAA,CAAAC,cAAA,aAAyC;QAAAD,EAAA,CAAAE,MAAA,2BAAmB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACjEH,EAAA,CAAAC,cAAA,aAAuC;QACzBD,EAAA,CAAAE,MAAA,WAAG;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAACH,EAAA,CAAAE,MAAA,iHAAwG;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACtIH,EAAA,CAAAC,cAAA,UAAI;QAAQD,EAAA,CAAAE,MAAA,WAAG;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAACH,EAAA,CAAAE,MAAA,gFAAqE;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACnGH,EAAA,CAAAC,cAAA,UAAI;QAAQD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAACH,EAAA,CAAAE,MAAA,iKAAwJ;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACzLH,EAAA,CAAAC,cAAA,UAAI;QAAQD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAACH,EAAA,CAAAE,MAAA,6LAAoL;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACtNH,EAAA,CAAAC,cAAA,UAAI;QAAQD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAACH,EAAA,CAAAE,MAAA,iHAAwG;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACzIH,EAAA,CAAAC,cAAA,UAAI;QAAQD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAACH,EAAA,CAAAE,MAAA,sIAA6H;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC7JH,EAAA,CAAAC,cAAA,UAAI;QAAQD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAACH,EAAA,CAAAE,MAAA,sJAA6I;QAAAF,EAAA,CAAAG,YAAA,EAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}